{
  "compilerOptions": {
    // Basic options
    "target": "ESNext", /* or at least ES2015 */
    "module": "ESNext", /* or at least ES2015 */
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ], /* <-- required! */
    "jsx": "preserve", /* <-- required! */
    "outDir": "./tsc/.tsc", /* this won't be used by ts-loader, but used tsc --incremental */
    "moduleResolution": "Node", /* <-- required! */
    "isolatedModules": true,
    "resolveJsonModule": true,
    "esModuleInterop": true,
    "pretty": true, /* cli colorized output */// strict type checking
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strict": true,
    "noUncheckedIndexedAccess": true,
    "alwaysStrict": true,
    "strictPropertyInitialization": false,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "noImplicitThis": true,
    // additional checks
    "forceConsistentCasingInFileNames": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noImplicitReturns": true,
    "noFallthroughCasesInSwitch": true,
    // type checking allows
    "allowJs": true,
    "skipLibCheck": true,
    "allowSyntheticDefaultImports": false,
    // compiler options
    "declaration": true,
    "sourceMap": true,
    "incremental": true, /*  it is create.tsbuildinfo in outDir */
    "noEmit": true,
    // decorators
    "experimentalDecorators": false,
    // webpack aliases
    "baseUrl": "./",
    "paths": {
      "@/*": [
        "src/*"
      ]
    }
  },
  "include": [
    "next-env.d.ts",
    "**/*",
    "**/*.ts",
    "**/*.tsx",
    "**/*.css"
  ],
  "exclude": [
    ".yarn",
    "node_modules",
    ".cache",
    "public",
    "tsc"
  ]
}
